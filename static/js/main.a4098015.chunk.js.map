{"version":3,"sources":["components/Scoreboard.js","components/Card.js","scripts/randomNumGenerator.js","App.js","index.js"],"names":["Scoreboard","props","currentScore","highScore","id","Card","num","color","compareClickedAndSelected","className","style","onClick","randomNumGenerator","max","Math","floor","random","App","useState","setCurrentScore","setHighScore","selectedCards","setSelectedCards","renderedCards","setRenderedCards","isGameOver","setIsGameOver","useEffect","cards","console","log","some","obj","push","length","every","includes","e","target","el","prevSelection","prevScore","type","disabled","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAWeA,G,MAXI,SAACC,GAAW,IACrBC,EAA4BD,EAA5BC,aAAcC,EAAcF,EAAdE,UAEtB,OACE,sBAAKC,GAAG,aAAR,UACE,oBAAGA,GAAG,eAAN,4BAAqCF,KACrC,oBAAGE,GAAG,YAAN,yBAA+BD,UCStBE,EAfF,SAACJ,GAAW,IACfK,EAA8CL,EAA9CK,IAAKC,EAAyCN,EAAzCM,MAAOH,EAAkCH,EAAlCG,GAAII,EAA8BP,EAA9BO,0BAExB,OACE,qBACEC,UAAU,OACVL,GAAIA,EACJM,MAAO,CAAEH,MAAOA,GAChBI,QAASH,EAJX,SAME,4BAAIF,OCRKM,EAFY,SAACC,GAAD,OAASC,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMF,KC+F3DI,MAzFf,WAAgB,IAAD,EAC2BC,mBAAS,GADpC,mBACNhB,EADM,KACQiB,EADR,OAEqBD,mBAAShB,GAF9B,mBAENC,EAFM,KAEKiB,EAFL,OAG6BF,mBAAS,IAHtC,mBAGNG,EAHM,KAGSC,EAHT,OAI6BJ,mBAAS,IAJtC,mBAINK,EAJM,KAISC,EAJT,OAKuBN,oBAAS,GALhC,mBAKNO,EALM,KAKMC,EALN,KAObC,qBAAU,WACR,IAAKF,EAAY,CAEf,IADA,IAAIG,EAAQ,GADG,aAGb,IAAMtB,EAAMM,EAAmB,IACzBL,EAAkC,IAA1BK,EAAmB,GAAW,QAAU,MAChDR,EAAE,UAAME,EAAN,YAAaC,GACrBsB,QAAQC,IAAI1B,GACPwB,EAAMG,MAAK,SAACC,GAAD,OAASA,EAAI5B,KAAOA,MAClCwB,EAAMK,KAAK,CAAE7B,KAAIE,MAAKC,WANnBqB,EAAMM,OAAS,GAAI,IASL,IAAjBN,EAAMM,QAAgBN,EAAMO,OAAM,SAACH,GAAD,OAASX,EAAce,SAASJ,EAAI5B,OACxEwB,EAAQ,GACkB,IAAjBA,EAAMM,QAAiBN,EAAMO,OAAM,SAACH,GAAD,OAASX,EAAce,SAASJ,EAAI5B,QAChFoB,EAAiBI,MAGpB,CAACH,EAAYJ,IAEhBM,qBAAU,WACJzB,EAAeC,GACjBiB,EAAalB,KAEd,CAACA,IAEJyB,qBAAU,WACa,KAAjBzB,IACFwB,GAAc,GACdJ,EAAiB,IACjBH,EAAgB,MAEjB,CAACjB,IAEJ,IAAMM,EAA4B,SAAC6B,GAAO,IAChCjC,EAAOiC,EAAEC,OAATlC,GACHiB,EAAcU,MAAK,SAACQ,GAAD,OAAQA,IAAOnC,KAG5BiB,EAAcU,MAAK,SAACQ,GAAD,OAAQA,IAAOnC,OAC3CkB,EAAiB,IACjBH,EAAgB,KAJhBG,GAAiB,SAACkB,GAAD,4BAAuBA,GAAvB,CAAsCpC,OACvDe,GAAgB,SAACsB,GAAD,OAAeA,EAAY,OAS/C,OACE,sBAAKhC,UAAU,MAAf,UACE,mCACE,kDACA,cAAC,EAAD,CACEP,aAAcA,EACdC,UAAWA,OAGf,wBACEC,GAAG,YACHsC,KAAK,SACL/B,QAdqB,kBAAMe,GAAc,IAezCiB,UAAUlB,EAJZ,wBAOA,sBAAMrB,GAAG,QAAT,UACIqB,GACGF,EAAcqB,KAAI,SAACZ,GACpB,OACE,cAAC,EAAD,CAEE5B,GAAI4B,EAAI5B,GACRE,IAAK0B,EAAI1B,IACTC,MAAOyB,EAAIzB,MACXC,0BAA2BA,GAJtBwB,EAAI5B,aC7EzByC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a4098015.chunk.js","sourcesContent":["const Scoreboard = (props) => {\n  const { currentScore, highScore } = props;\n\n  return (\n    <div id='scoreboard'>\n      <p id='currentScore'>Current Score: {currentScore}</p>\n      <p id='highScore'>High Score: {highScore}</p>\n    </div>\n  )\n}\n\nexport default Scoreboard;\n","const Card = (props) => {\n  const { num, color, id, compareClickedAndSelected } = props;\n\n  return (\n    <div\n      className='card'\n      id={id}\n      style={{ color: color }}\n      onClick={compareClickedAndSelected}\n    >\n      <p>{num}</p>\n    </div>\n  )\n}\n\nexport default Card;\n","const randomNumGenerator = (max) => Math.floor(Math.random() * Math.floor(max));\n\nexport default randomNumGenerator;\n","import './styles/main.css';\nimport { useEffect, useState } from 'react';\nimport Scoreboard from './components/Scoreboard';\nimport Card from './components/Card';\nimport randomNumGenerator from './scripts/randomNumGenerator';\n\nfunction App() {\n  const [currentScore, setCurrentScore] = useState(0);\n  const [highScore, setHighScore] = useState(currentScore);\n  const [selectedCards, setSelectedCards] = useState([]);\n  const [renderedCards, setRenderedCards] = useState([]);\n  const [isGameOver, setIsGameOver] = useState(true);\n\n  useEffect(() => {\n    if (!isGameOver) {\n      let cards = [];\n      while (cards.length < 3) {\n        const num = randomNumGenerator(11);\n        const color = randomNumGenerator(2) === 0 ? 'black' : 'red';\n        const id = `${num}-${color}`;\n        console.log(id);\n        if (!cards.some((obj) => obj.id === id)) {\n          cards.push({ id, num, color });\n        }\n      }\n      if (cards.length === 3 && cards.every((obj) => selectedCards.includes(obj.id))) {\n        cards = [];\n      } else if (cards.length === 3 && !cards.every((obj) => selectedCards.includes(obj.id))) {\n        setRenderedCards(cards);\n      }\n    }\n  }, [isGameOver, selectedCards]);\n\n  useEffect(() => {\n    if (currentScore > highScore) {\n      setHighScore(currentScore);\n    }\n  }, [currentScore]);\n\n  useEffect(() => {\n    if (currentScore === 22) {\n      setIsGameOver(true);\n      setSelectedCards([]);\n      setCurrentScore(0);\n    }\n  }, [currentScore]) \n\n  const compareClickedAndSelected = (e) => {\n    const { id } = e.target;\n    if (!selectedCards.some((el) => el === id)) {\n      setSelectedCards((prevSelection) => [...prevSelection, id]);\n      setCurrentScore((prevScore) => prevScore + 1);\n    } else if (selectedCards.some((el) => el === id)) {\n      setSelectedCards([]);\n      setCurrentScore(0);\n    }\n  }\n\n  const handleGameStartBtn = () => setIsGameOver(false);\n\n  return (\n    <div className='App'>\n      <header>\n        <h1>Memory Card Game</h1>\n        <Scoreboard\n          currentScore={currentScore}\n          highScore={highScore}\n        />\n      </header>\n      <button\n        id='start-btn'\n        type='button'\n        onClick={handleGameStartBtn}\n        disabled={isGameOver ? false : true}\n      >Start Game\n      </button>\n      <main id='cards'>\n        {!isGameOver\n          && renderedCards.map((obj) => {\n            return (\n              <Card\n                key={obj.id}\n                id={obj.id}\n                num={obj.num}\n                color={obj.color}\n                compareClickedAndSelected={compareClickedAndSelected}\n              />\n            )\n          })\n        }\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}